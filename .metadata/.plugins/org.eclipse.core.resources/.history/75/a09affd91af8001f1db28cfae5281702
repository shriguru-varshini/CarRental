<!DOCTYPE html>
<html lang="en">

<head>
<title>JavaScript Book System</title>
</head>
<body>
<h1>Books Available</h1>
<ul id="bookList"></ul>
<label for="bookId">Enter Book Id :</label>
<input type ="number" id="bookId">
<button onclick="fetchBookById()">Search Book</button>
<h2>Book Details :</h2>
<p id = "bookDetails"></p>
 
<h2>Add a New Book</h2>
<label for="newBookId">Book Id:</label>
<input type="number" id="newBookId"><br>
<label for="newBookTitle">Title:</label>
<input type="text" id="newBookTitle"><br>
<label for="newBookPrice">Price:</label>
<input type="number" id="newBookPrice"><br>
<label for="newAuthorId">Author Id:</label>
<input type="number" id="newAuthorId"><br>
<button onclick="submitBooks()">Click to add</button>

<h2>Delete a book</h2>
<label for="deleteBookId">Enter book id to delete:</label>
<input type="number" id="deleteBookId"><br>
<button onclick="deleteBook()">Delete</button>
 
<script>
		//fetch books dynamically

		//fetch book by id


		function fetchBookById(){
		const bookId = document.getElementById("bookId").value;
		if(!bookId){
			alert("Please enter some book id");
			return;
		}
		fetch(`api/books/${bookId}`)
		.then(response => {
			if(!response.ok){
				throw new Error("Book not found");
			}
			return response.json();
		})
		.then (book => {
			document.getElementById("bookDetails").textContent =
				`Title : ${book.title} || Price : ${book.price} || Author ID : ${book.authorId}`;
		})
		.catch(error => {
			document.getElementById("bookDetails").textContent = "Book Not Found";
		})
		}
// Add a new book
        function addBook() {
            const newBookId = document.getElementById("newBookId").value;
            const newBookTitle = document.getElementById("newBookTitle").value;
            const newBookPrice = document.getElementById("newBookPrice").value;
            const newAuthorId = document.getElementById("newAuthorId").value;
 
            if (!newBookId || !newBookTitle || !newBookPrice || !newAuthorId) {
                alert("Please fill in all fields");
                return;
            }
 
            const newBook = {
                id: newBookId,
                title: newBookTitle,
                price: newBookPrice,
                authorId: newAuthorId
            };
 
            fetch('/api/books', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newBook)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to add book");
                }
                return response.json();
            })
            .then(data => {
                alert("Book added successfully");
                // Optionally, update the book list dynamically
                const list = document.getElementById('bookList');
                const li = document.createElement('li');
                li.textContent = `${data.title} having price ${data.price} with author id ${data.authorId}`;
                list.appendChild(li);
            })
            .catch(error => {
                console.error('Error adding book:', error);
                alert("Error adding book");
            });
        }
 
        // Submit books 
        function submitBooks() {
            alert("Books submitted successfully");
        }

 
		fetch('/api/books')
		.then(response => response.json())
		.then(data => {
			const list = document.getElementById('bookList');
			data.forEach(book => {
				const li = document.createElement('li');
				li.textContent = `${book.title} having price ${book.price} with author id ${book.authorId}`;
				list.appendChild(li);
			})
		})
		.catch(error => console.error('Error fetching books data', error)); 
		
		// Delete Book frontend
		
	    async function deleteBook() {
	        const deleteBookId = document.getElementById('deleteBookId').value;
	        if (!deleteBookId) {
	            alert("Please enter a valid book ID to delete.");
	            return;
	        }

	        try {
	            const response = await fetch(`/api/books/${deleteBookId}`, {
	                method: "DELETE"
	            });

	            if (!response.ok) {
	                throw new Error("Failed to delete book");
	            }

	            alert(`Book with ID ${deleteBookId} deleted successfully!`);    
	        } catch (error) {
	            console.error('Error deleting book:', error);
	        }
	    }
		
	    async function updateBook() {
            const updateBookId = document.getElementById("updateBookId").value;
            const updateBookTitle = document.getElementById("updateBookTitle").value;
            const updateBookPrice = document.getElementById("updateBookPrice").value;
            const updateAuthorId = document.getElementById("updateAuthorId").value;
            if (!updateBookId || !updateBookTitle || !updateBookPrice || !updateAuthorId) {
                alert("Please fill all fields!");
                return;
            }
 
            const updatedBook = {
                id: parseInt(updateBookId),
                title: updateBookTitle,
                price: parseFloat(updateBookPrice),
                authorId: parseInt(updateAuthorId)
            };
 
            try {
                const response = await fetch(`/api/books`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(updatedBook)
                });
                if (!response.ok) {
                    throw new Error("Failed to update book");
                }
                document.getElementById("updateBookResponse").textContent = "Book updated successfully!";
            } catch (error) {
                document.getElementById("updateBookResponse").textContent = "Error updating book!";
                console.error('Error updating book:', error);
            }
        }
</script>
</body>
</html>