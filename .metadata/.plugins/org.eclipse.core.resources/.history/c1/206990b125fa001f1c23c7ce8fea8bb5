package com.CarRentalSystem.CarRental.Controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.CarRentalSystem.CarRental.Models.Payment;
import com.CarRentalSystem.CarRental.service.PaymentService;

@Controller
@RequestMapping("/api/payments")
public class PaymentController {

    private final PaymentService paymentService;

    @Autowired
    public PaymentController(PaymentService paymentService) {
        this.paymentService = paymentService;
    }

    @GetMapping
    @ResponseBody
    public List<Payment> fetchPayments() {
        return paymentService.getAllPayments();
    }

    @GetMapping("/{id}")
    @ResponseBody
    public ResponseEntity<Payment> fetchPaymentById(@PathVariable("id") int id) {
        return paymentService.getPaymentById(id)
            .map(ResponseEntity::ok)
            .orElseGet(() -> ResponseEntity.status(HttpStatus.NOT_FOUND).body(null));
    }

    @PostMapping
    @ResponseBody
    public String addPayment(@RequestBody Payment payment) {
        paymentService.addPayment(payment);
        return "Payment added successfully";
    }

    @DeleteMapping("/{id}")
    @ResponseBody
    public ResponseEntity<String> deletePayment(@PathVariable int id) {
        try {
            int rowsAffected = paymentService.deletePayment(id);
            if (rowsAffected > 0) {
                return ResponseEntity.ok("Payment Deleted Successfully");
            } else {
                return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Payment Not Found");
            }
        } catch (Exception e) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Error Deleting Payment");
        }
    }

    @PutMapping
    @ResponseBody
    public String updatePayment(@RequestBody Payment payment) {
        paymentService.updatePayment(payment);
        return "Payment Updated Successfully";
    }
}
