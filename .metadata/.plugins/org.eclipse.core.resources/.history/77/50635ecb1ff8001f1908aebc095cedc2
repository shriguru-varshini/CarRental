<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>JavaScript Book System</title>
</head>
<body>
<h1>Books available</h1>
<ul id="bookList"></ul>
 
   <!--  <label for="bookId">Enter book id:</label>
<input type="number" id="bookId">
<button onclick="fetchBookById()">Search book</button>
 
    <h2>Book details:</h2>
<p id="bookDetails"></p>
 
    <h2>Add a new book</h2>
<label for="newBookId">Book id:</label>
<input type="number" id="newBookId"><br>
<label for="newBookTitle">Title:</label>
<input type="text" id="newBookTitle"><br>
<label for="newBookPrice">Price:</label>
<input type="number" id="newBookPrice"><br>
<label for="newAuthorId">Author id:</label>
<input type="number" id="newAuthorId"><br>
<button onclick="submitBooks()">Submit</button> -->
 
    <h2>Delete a book</h2>
<label for="deleteBookId">Enter book id to delete:</label>
<input type="number" id="deleteBookId"><br>
<button onclick="deleteBook()">Delete</button>
<h2>Update a book</h2>
<label for="updateBookId">Book id:</label>
<input type="number" id="updateBookId"><br>
<label for="updateBookTitle">Title:</label>
<input type="text" id="updateBookTitle"><br>
<label for="updateBookPrice">Price:</label>
<input type="number" id="updateBookPrice"><br>
<label for="updateAuthorId">Author id:</label>
<input type="number" id="updateAuthorId"><br>
<button onclick="updateBook()">Update</button>
<script>
        // Fetch books dynamically
         fetch('/api/books')
        .then(response => response.json())
        .then(data => {
            const list = document.getElementById('bookList');
            data.forEach(book => {
                const li = document.createElement('li');
                li.textContent = `${book.title} having price ${book.price} with author id ${book.authorId}`;
                list.appendChild(li);
            });
        })
        .catch(error => console.error('Error fetching books data', error)); 
 
        // Fetch book by id
         function fetchBookById() {
            const bookId = document.getElementById("bookId").value;
            if (!bookId) {
                alert("Please enter some book id");
                return;
            }
            fetch(`api/books/${bookId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error("Book not found");
                }
                return response.text();
            })
            .then(book => {
                document.getElementById("bookDetails").textContent =
                    `Title: ${book.title} || Price: ${book.price} || Author ID: ${book.authorId}`;
            })
            .catch(error => {
                document.getElementById("bookDetails").textContent = "Book not found";
            });
        }
        // Submit books (dummy function for demonstration)
        function submitBooks() {
            const newBookId = document.getElementById("newBookId").value;
            const newBookTitle = document.getElementById("newBookTitle").value;
            const newBookPrice = document.getElementById("newBookPrice").value;
            const newAuthorId = document.getElementById("newAuthorId").value;
 
            if (!newBookId || !newBookTitle || !newBookPrice || !newAuthorId) {
                alert("Please fill in all fields");
                return;
            }
 
            const newBook = {
                id: newBookId,
                title: newBookTitle,
                price: newBookPrice,
                authorId: newAuthorId
            };
 
            fetch('/api/books', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(newBook)
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error("Failed to add book");
                }
                return response.json();
            })
            .then(data => {
                alert("Book added successfully");
                // Optionally, update the book list dynamically
                const list = document.getElementById('bookList');
                const li = document.createElement('li');
                li.textContent = `Book Id: ${data.id}   Book Title: ${data.title}   Book Price:  ${data.price}   Author id:  ${data.authorId}`;
                list.appendChild(li);
            })
            .catch(error => {
                console.error('Error adding book:', error);
                alert("Error adding book");
            });
            fetch('/api/books')
        	.then(response => response.json())
 
        	.then(data => {
 
        		const list = document.getElementById('bookList');
 
        		data.forEach(book => {
 
        			const li = document.createElement('li');
 
        			 li.textContent = `Book Id: ${data.id}   Book Title: ${data.title}   Book Price:  ${data.price}   Author id:  ${data.authorId}`;
                     list.appendChild(li);
 
        		})
 
        	})
 
        	.catch(error => console.error('Error fetching books data', error));
        }
async function deleteBook() {
     const deleteBookId = document.getElementById('deleteBookId').value;
     if (!deleteBookId) {
         alert("Please enter a valid book ID to delete.");
         return;
     }
 
     try {
         const response = await fetch(`/api/books/${deleteBookId}`, {
             method: "DELETE"
         });
 
         if (!response.ok) {
             throw new Error("Failed to delete book");
         }
 
         alert(`Book with ID ${deleteBookId} deleted successfully!`);    
     } catch (error) {
         console.error('Error deleting book:', error);
     }
}
function updateBook() {
     const updateBookId = document.getElementById("updateBookId").value;
     const updateBookTitle = document.getElementById("updateBookTitle").value;
     const updateBookPrice = document.getElementById("updateBookPrice").value;
     const updateAuthorId = document.getElementById("updateAuthorId").value;
 
     if (!updateBookId || !updateBookTitle || !updateBookPrice || !updateAuthorId) {
         alert("Please fill in all fields");
         return;
     }
 
     const updatedBook = {
         title: updateBookTitle,
         price: updateBookPrice,
         authorId: updateAuthorId
     };
 
     fetch(`/api/books/${updateBookId}`, {
         method: 'PUT',
         headers: {
             'Content-Type': 'application/json'
         },
         body: JSON.stringify(updatedBook)
     })
     .then(response => {
         if (!response.ok) {
             throw new Error("Failed to update book");
         }
         return response.text();
     })
     .then(data => {
         alert("Book updated successfully");
         fetchBooks(); // Fetch and print all books after updating a book
     })
     .catch(error => {
         console.error('Error updating book:', error);
         alert("Error updating book");
     });
}

</script>
</body>
</html>